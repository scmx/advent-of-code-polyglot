#!/usr/bin/env ruby

class GameSet
  attr_accessor :red, :green, :blue

  def initialize(red: 0, green: 0, blue: 0)
    self.red = red
    self.green = green
    self.blue = blue
  end
end

def parse_cube(cube)
  count, color = cube.split
  [color.to_sym, count.to_i]
end

def parse_set(slice)
  GameSet.new(**slice.split(', ').map { |item| parse_cube(item.strip) }.sort.to_h)
end

def parse_game(line)
  game_id, info = line[5..].split(':')
  sets = info.split('; ').map { |set| parse_set(set) }
  [game_id.to_i, sets]
end

def fewest(game_id, sets)
  [game_id, sets.map { |set| [set.red, set.green, set.blue] }.transpose.map(&:max)]
end

ARGF.read.split("\n")
    .to_h { |line| parse_game(line) }
    .map(&method(:fewest))
    .map { |_, counts| counts.inject(:*) }
    .sum
    .then(&method(:pp))
